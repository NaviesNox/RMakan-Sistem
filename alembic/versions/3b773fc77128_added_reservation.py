"""Added Reservation

Revision ID: 3b773fc77128
Revises: e11313fb34aa
Create Date: 2025-09-19 14:24:55.904543

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '3b773fc77128'
down_revision: Union[str, Sequence[str], None] = 'e11313fb34aa'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


payment_method_enum = postgresql.ENUM(
    'cash', 'card', 'e_wallet', name='paymentmethodenum'
)
payment_status_enum = postgresql.ENUM(
    'unpaid', 'paid', 'refunded', name='paymentstatusenum'
)
role_enum = postgresql.ENUM(
    'admin', 'manager', 'waiter', 'reservation_staff', name='roleenum', create_type=False
)
reservation_status_enum = postgresql.ENUM(
    'pending', 'confirmed', 'cancelled', 'completed', name='reservationstatusenum', create_type=False
)

def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    payment_method_enum.create(op.get_bind())
    payment_status_enum.create(op.get_bind())
    role_enum.create(op.get_bind())
    reservation_status_enum.create(op.get_bind())

    op.alter_column('customer', 'id_customer',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('customer', 'email',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=100),
               existing_nullable=False)
    op.create_index(op.f('ix_customer_id_customer'), 'customer', ['id_customer'], unique=False)
    op.create_unique_constraint(None, 'customer', ['phone'])
    op.alter_column('feedback', 'id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('feedback', 'rating',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('feedback', 'comment',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.create_index(op.f('ix_feedback_id'), 'feedback', ['id'], unique=False)
    op.drop_constraint(op.f('feedback_id_customer_fkey'), 'feedback', type_='foreignkey')
    op.drop_constraint(op.f('feedback_id_reservation_fkey'), 'feedback', type_='foreignkey')
    op.create_foreign_key(None, 'feedback', 'reservation', ['id_reservation'], ['id'])
    op.create_foreign_key(None, 'feedback', 'customer', ['id_customer'], ['id_customer'])
    op.alter_column('meja', 'id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('meja', 'location',
               existing_type=postgresql.ENUM('indoor', 'outdoor', 'vip', name='location_enum'),
               nullable=False)
    op.create_index(op.f('ix_meja_id'), 'meja', ['id'], unique=False)
    op.alter_column('payment', 'amount',
               existing_type=sa.NUMERIC(precision=12, scale=2),
               type_=sa.Float(),
               existing_nullable=False)
    op.alter_column('payment', 'method',
               existing_type=sa.VARCHAR(length=20),
               type_=payment_method_enum,
               postgresql_using="method::text::paymentmethodenum",
               nullable=False)
    op.alter_column('payment', 'status',
               existing_type=sa.VARCHAR(length=20),
               type_=payment_status_enum,
               postgresql_using="status::text::paymentstatusenum",
               nullable=False,
               existing_server_default=sa.text("'unpaid'::character varying"))
    op.alter_column('payment', 'transaction_time',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.create_index(op.f('ix_payment_id'), 'payment', ['id'], unique=False)
    op.drop_constraint(op.f('payment_id_reservation_fkey'), 'payment', type_='foreignkey')
    op.create_foreign_key(None, 'payment', 'reservation', ['id_reservation'], ['id'])
    op.alter_column('reservation', 'id',
               existing_type=sa.BIGINT(),
               server_default=None,
               type_=sa.Integer(),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('reservation', 'id_customer',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=False)
    op.alter_column('reservation', 'id_staff',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=True)
    op.alter_column('reservation', 'id_meja',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=False)
    op.alter_column('reservation', 'reservation_time',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('reservation', 'guest_count',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=False)
    op.alter_column('reservation', 'notes',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('reservation', 'status',
               existing_type=sa.VARCHAR(),
               type_=reservation_status_enum,
               postgresql_using="status::text::reservationstatusenum",
               nullable=False)
    op.create_index(op.f('ix_reservation_id'), 'reservation', ['id'], unique=False)
    op.drop_constraint(op.f('reservation_id_staff_fkey'), 'reservation', type_='foreignkey')
    op.drop_constraint(op.f('reservation_id_customer_fkey'), 'reservation', type_='foreignkey')
    op.drop_constraint(op.f('reservation_id_meja_fkey'), 'reservation', type_='foreignkey')
    op.create_foreign_key(None, 'reservation', 'meja', ['id_meja'], ['id'])
    op.create_foreign_key(None, 'reservation', 'staff', ['id_staff'], ['id'])
    op.create_foreign_key(None, 'reservation', 'customer', ['id_customer'], ['id_customer'])
    op.alter_column('staff', 'id',
               existing_type=sa.BIGINT(),
               server_default=None,
               type_=sa.Integer(),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('staff', 'role',
               existing_type=sa.VARCHAR(length=20),
               type_=role_enum,
               postgresql_using="role::text::roleenum",
               nullable=False)
    op.create_index(op.f('ix_staff_id'), 'staff', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_staff_id'), table_name='staff')
    op.alter_column('staff', 'role',
               existing_type=sa.Enum('admin', 'waiter', 'manager', 'reservationStaff', name='roleenum'),
               type_=sa.VARCHAR(length=20),
               nullable=True)
    op.alter_column('staff', 'id',
               existing_type=sa.Integer(),
               server_default=sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1),
               type_=sa.BIGINT(),
               existing_nullable=False,
               autoincrement=True)
    op.drop_constraint(None, 'reservation', type_='foreignkey')
    op.drop_constraint(None, 'reservation', type_='foreignkey')
    op.drop_constraint(None, 'reservation', type_='foreignkey')
    op.create_foreign_key(op.f('reservation_id_meja_fkey'), 'reservation', 'meja', ['id_meja'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    op.create_foreign_key(op.f('reservation_id_customer_fkey'), 'reservation', 'customer', ['id_customer'], ['id_customer'], onupdate='CASCADE', ondelete='CASCADE')
    op.create_foreign_key(op.f('reservation_id_staff_fkey'), 'reservation', 'staff', ['id_staff'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    op.drop_index(op.f('ix_reservation_id'), table_name='reservation')
    op.alter_column('reservation', 'status',
               existing_type=sa.Enum('pending', 'confirmed', 'cancelled', 'completed', name='reservationstatusenum'),
               type_=sa.VARCHAR(),
               nullable=True)
    op.alter_column('reservation', 'notes',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('reservation', 'guest_count',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=False)
    op.alter_column('reservation', 'reservation_time',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('reservation', 'id_meja',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=False)
    op.alter_column('reservation', 'id_staff',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=True)
    op.alter_column('reservation', 'id_customer',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=False)
    op.alter_column('reservation', 'id',
               existing_type=sa.Integer(),
               server_default=sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1),
               type_=sa.BIGINT(),
               existing_nullable=False,
               autoincrement=True)
    op.drop_constraint(None, 'payment', type_='foreignkey')
    op.create_foreign_key(op.f('payment_id_reservation_fkey'), 'payment', 'reservation', ['id_reservation'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    op.drop_index(op.f('ix_payment_id'), table_name='payment')
    op.alter_column('payment', 'transaction_time',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('payment', 'status',
               existing_type=sa.Enum('unpaid', 'paid', 'refunded', name='paymentstatusenum'),
               type_=sa.VARCHAR(length=20),
               nullable=True,
               existing_server_default=sa.text("'unpaid'::character varying"))
    op.alter_column('payment', 'method',
               existing_type=sa.Enum('cash', 'card', 'e_wallet', name='paymentmethodenum'),
               type_=sa.VARCHAR(length=20),
               nullable=True)
    op.alter_column('payment', 'amount',
               existing_type=sa.Float(),
               type_=sa.NUMERIC(precision=12, scale=2),
               existing_nullable=False)
    op.drop_index(op.f('ix_meja_id'), table_name='meja')
    op.alter_column('meja', 'location',
               existing_type=postgresql.ENUM('indoor', 'outdoor', 'vip', name='location_enum'),
               nullable=True)
    op.alter_column('meja', 'id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=False,
               autoincrement=True)
    op.drop_constraint(None, 'feedback', type_='foreignkey')
    op.drop_constraint(None, 'feedback', type_='foreignkey')
    op.create_foreign_key(op.f('feedback_id_reservation_fkey'), 'feedback', 'reservation', ['id_reservation'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    op.create_foreign_key(op.f('feedback_id_customer_fkey'), 'feedback', 'customer', ['id_customer'], ['id_customer'], onupdate='CASCADE', ondelete='CASCADE')
    op.drop_index(op.f('ix_feedback_id'), table_name='feedback')
    op.alter_column('feedback', 'comment',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('feedback', 'rating',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('feedback', 'id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=False,
               autoincrement=True)
    op.drop_constraint(None, 'customer', type_='unique')
    op.drop_index(op.f('ix_customer_id_customer'), table_name='customer')
    op.alter_column('customer', 'email',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=255),
               existing_nullable=False)
    op.alter_column('customer', 'id_customer',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=False,
               autoincrement=True)
    
    reservation_status_enum.drop(op.get_bind())
    role_enum.drop(op.get_bind())
    payment_status_enum.drop(op.get_bind())
    payment_method_enum.drop(op.get_bind())
    # ### end Alembic commands ###
