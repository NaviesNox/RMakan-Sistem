"""PERUBAHAN TABLE USER JADI USERS

Revision ID: 53e2c8fb2937
Revises: 1468c648c600
Create Date: 2025-09-23 13:38:24.767544

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '53e2c8fb2937'
down_revision: Union[str, Sequence[str], None] = '1468c648c600'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=False),
    sa.Column('password', sa.String(length=100), nullable=False),
   
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('phone', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('phone')
    )

    op.drop_table('user')
    op.drop_constraint(op.f('feedback_id_user_fkey'), 'feedback', type_='foreignkey')
    op.create_foreign_key(None, 'feedback', 'users', ['id_user'], ['id'])
    op.add_column('reservation', sa.Column('id_users', sa.Integer(), nullable=True))
    op.drop_constraint(op.f('reservation_id_user_fkey'), 'reservation', type_='foreignkey')
    op.create_foreign_key(None, 'reservation', 'users', ['id_users'], ['id'])
    op.drop_column('reservation', 'id_user')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('reservation', sa.Column('id_user', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'reservation', type_='foreignkey')
    op.create_foreign_key(op.f('reservation_id_user_fkey'), 'reservation', 'user', ['id_user'], ['id'])
    op.drop_column('reservation', 'id_users')
    op.drop_constraint(None, 'feedback', type_='foreignkey')
    op.create_foreign_key(op.f('feedback_id_user_fkey'), 'feedback', 'user', ['id_user'], ['id'])
    op.create_table('user',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('username', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('password', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('role', postgresql.ENUM('admin', 'waiter', 'manager', 'reservationStaff', 'customer', name='roleenum'), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('phone', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('user_pkey')),
    sa.UniqueConstraint('email', name=op.f('user_email_key'), postgresql_include=[], postgresql_nulls_not_distinct=False),
    sa.UniqueConstraint('phone', name=op.f('user_phone_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
   
    op.drop_table('users')
    # ### end Alembic commands ###
